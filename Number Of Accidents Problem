// Ryan Marinelli 
// Question 4 Safest Driving Area 
// pg 373

#include <iostream>
#include <map>
#include <set>
#include <algorithm>
#include <functional>


using namespace std;

// Prototyping function 
void getNumAccidents();
void findLowest();

//Base Class
 class Area{
     public:
        int numOfAccidents;
        
     public:
       int getNumAccidents(int numOfAccidents)
       {
           return numOfAccidents;
       }
 };

//Overriding number of Accidents for data from northern area 
  class North: public Area{
      public:
         int numOfAccidents;
        
      public:
      
       North(int numOfAccidents){
           this -> numOfAccidents = numOfAccidents;
       }
       
       int getNumAccidents(int numOfAccidents)
       {
         return numOfAccidents;
       }
       
  };
  
 //Overriding number of Accidents for data from southern area
  class South: public Area{
      public:
         int numOfAccidents;
        
      public:
       int getNumAccidents(int numOfAccidents)
       {
           return this->numOfAccidents;
       }
  };
  
  //Overriding number of Accidents for data from eastern area
  class East : public Area{
      public:
        int numOfAccidents;
        
      public:
       int getNumAccidents(int numOfAccidents)
       {
           return this->numOfAccidents;
       }
  };
  
  //Overriding number of Accidents for data from western area
  class West: public Area{
      public:
        int numOfAccidents;
        
      public:
       int getNumAccidents(int numOfAccidents)
      {
        return this->numOfAccidents;  
      }
  }; 
  
  //Overriding number of Accidents for data from central area
  class Central: public Area{
      public:
       int numOfAccidents;
      
      public:
        int getNumAccidents(int numOfAccidents){
            return this->numOfAccidents;
        }
  };
  
    int main()
  {
      
      // Inputs data from user on northern driving accidents 
      North mynorth();
      cout << "How many accidents occured in the north\n";
      cin >> mynorth.getNumAccidents();
      
      // Inputs data from user on southern driving accidents 
      South mysouth;
      cout << "How many accidents occured in the south\n";
      cin >> mysouth.numOfAccidents;
      
      // Inputs data from user on eastern driving accidents 
      East myeast;
      cout << "How many accidents occured in the east\n";
      cin >> myeast.numOfAccidents;
      
      // Inputs data from user on western driving accidents 
      West mywest;
      cout << "How many accidents occured in the west\n";
      cin >> mywest.numOfAccidents;
      
      // Inputs data from user on central driving accidents 
      Central mycentral;
      cout << "How many accidents occured in the central\n";
      cin >> mycentral.numOfAccidents;
      
      //Checking for zero values
      if(mynorth.numOfAccidents == 0)
       {
           cout <<"Please reenter a value for the north\n";
           cin >> mynorth.numOfAccidents;
       }
      
      //Checking for zero values
      if(mysouth.numOfAccidents == 0)
       {
           cout <<"Please reenter a value for the south\n";
           cin >> mysouth.numOfAccidents;
       }
      
      //Checking for zero values
      if(myeast.numOfAccidents == 0)
       {
           cout <<"Please reenter a value for the east\n";
           cin >> myeast.numOfAccidents;
       }
       
      //Checking for zero values 
      if(mywest.numOfAccidents == 0)
       {
           cout <<"Please reenter a value for the west\n";
           cin >> mywest.numOfAccidents;
       } 
       
       //Checking for zero values
       if(mycentral.numOfAccidents == 0)
       {
           cout <<"Please reenter a value for the central\n";
           cin >> mywest.numOfAccidents;
       } 
       
      
	
  };
